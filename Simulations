require(refund)
require(fda)
require(MASS)
require(EnvStats)

Nrep <- 1000
n <- 150
p <- 100
grid <- seq(0, 1, length = p)

# First experiment
alpha <- sin(2*pi*grid) 

mse1 <- rep(NA, Nrep)
mse2 <- rep(NA, Nrep

matr1 <- matrix(NA, nrow = p, ncol = Nrep)
matr2 <- matrix(NA, nrow = p, ncol = Nrep)

for(f in 1:Nrep){
  message('Iter = ', f, ' of ', Nrep)
  X0 <- matrix(rnorm(n*p), nrow = n, ncol = p)
  for(i in 1:n){
    for(j in 1:49){
      X0[i, ] <- X0[i, ] + j^{-1}*rnorm(1, 0, 1)*sqrt(2)*sapply(grid, FUN= function(x) cos((j-1)*pi*x))
      #X0[i, ] <- X0[i, ] +  1*j^{-1}*rt(1, df = 5)*sqrt(2)*sapply(grid, FUN= function(x) cos((j-1)*pi*x)) # For leverage contamination
    }
  }
  y0 = X0%*%alpha
  y <- y0 + rnorm(n)
  # y <- y0 + rt(n, df = 3)
  # y <- y0 + rnormMix(n, mean1 = 0, sd = 1, mean2 = 14, sd2 = 1, p.mix = 0.1)
  fit1 <- m.pen.sp(x = X0, y = y, nbasis = round(min(n/4, 40)), interval = c(0.2, 0.6))
  fit2 <- fpcr(y, xfuncs = X0)

  mse1[f] <- mean( (alpha-fit1$bh/p)^2 )  
  mse2[f] <- mean( (alpha-fit2$fhat)^2 )
  
  plot(grid, alpha, type = "l", lwd = 3, xlab = "t", ylab = "")
  lines(grid, fit1$bh/p, lwd = 3, col = "red")
  lines(grid, fit2$fhat, col = "blue", lwd = 3)
  
  matr1[, f] <- fit1$bh/p
  matr2[, f] <- fit2$fhat
}
mean(mse1, na.rm = TRUE)*Nrep
mean(mse2, na.rm =TRUE)*Nrep

median(mse1, na.rm = TRUE)*Nrep
median(mse2, na.rm = TRUE)*Nrep

matplot(grid, matr1, lwd = 3, col = "gray", type = "l", cex.axis = 2, cex.lab = 2) ; lines(grid, alpha, lwd = 3, col = "black"); grid()
matplot(grid, matr2, lwd = 3, col = "gray", type = "l", cex.axis = 2, cex.lab = 2) ; lines(grid, alpha, lwd = 3, col = "black"); grid()

##################################################################################################################################################
# Second experiment
Nrep <- 1000
n <- 150
p <- 100
grid <- seq(0, 1, length = p)
alpha = grid^2*dnorm(grid)

mse1 <- rep(NA, Nrep)
mse2 <- rep(NA, Nrep)

matr1 <- matrix(NA, nrow = p, ncol = Nrep)
matr2 <- matrix(NA, nrow = p, ncol = Nrep)

for(f in 1:Nrep){
  message('Iter = ', f, ' of ', Nrep)
  X0 <- matrix(rnorm(n*p), nrow = n, ncol = p)
  for(i in 1:n){
    for(j in 1:49){
      X0[i, ] <- X0[i, ] + j^{-1}*rnorm(1, 0, 1)*sqrt(2)*sapply(grid, FUN= function(x) cos((j-1)*pi*x))
      #X0[i, ] <- X0[i, ] +  1*j^{-1}*rt(1, df = 5)*sqrt(2)*sapply(grid, FUN= function(x) cos((j-1)*pi*x)) # For leverage contamination
    }
  }
  y0 = X0%*%alpha
  y <- y0 + rnorm(n)
  # y <- y0 + rt(n, df = 3)
  # y <- y0 + rnormMix(n, mean1 = 0, sd = 1, mean2 = 14, sd2 = 1, p.mix = 0.1)
  fit1 <- m.pen.sp(x = X0, y = y, nbasis = round(min(n/4, 40)), interval = c(70, 130))
  fit2 <- fpcr(y, xfuncs = X0)

  mse1[f] <- mean( (alpha-fit1$bh/p)^2 )  
  mse2[f] <- mean( (alpha-fit2$fhat)^2 )
  
  plot(grid, alpha, type = "l", lwd = 3, xlab = "t", ylab = "")
  lines(grid, fit1$bh/p, lwd = 3, col = "red")
  lines(grid, fit2$fhat, col = "blue", lwd = 3)
  
  matr1[, f] <- fit1$bh/p
  matr2[, f] <- fit2$fhat
}
mean(mse1, na.rm = TRUE)*Nrep
mean(mse2, na.rm =TRUE)*Nrep

median(mse1, na.rm = TRUE)*Nrep
median(mse2, na.rm = TRUE)*Nrep

matplot(grid, matr1, lwd = 3, col = "gray", type = "l", cex.axis = 2, cex.lab = 2) ; lines(grid, alpha, lwd = 3, col = "black"); grid()
matplot(grid, matr2, lwd = 3, col = "gray", type = "l", cex.axis = 2, cex.lab = 2) ; lines(grid, alpha, lwd = 3, col = "black"); grid()

##################################################################################################################################################
# Third experiment
Nrep <- 1000
n <- 150
p <- 100
grid <- seq(0, 1, length = p)
alpha = 1/(1+exp(-20*(grid-0.5)))

mse1 <- rep(NA, Nrep)
mse2 <- rep(NA, Nrep)

matr1 <- matrix(NA, nrow = p, ncol = Nrep)
matr2 <- matrix(NA, nrow = p, ncol = Nrep)

for(f in 1:Nrep){
  message('Iter = ', f, ' of ', Nrep)
  X0 <- matrix(rnorm(n*p), nrow = n, ncol = p)
  for(i in 1:n){
    for(j in 1:49){
      X0[i, ] <- X0[i, ] + j^{-1}*rnorm(1, 0, 1)*sqrt(2)*sapply(grid, FUN= function(x) cos((j-1)*pi*x))
      #X0[i, ] <- X0[i, ] +  1*j^{-1}*rt(1, df = 5)*sqrt(2)*sapply(grid, FUN= function(x) cos((j-1)*pi*x)) # For leverage contamination
    }
  }
  y0 = X0%*%alpha
  y <- y0 + rnorm(n)
  # y <- y0 + rt(n, df = 3)
  # y <- y0 + rnormMix(n, mean1 = 0, sd = 1, mean2 = 14, sd2 = 1, p.mix = 0.1)
  fit1 <- m.pen.sp(x = X0, y = y, nbasis = round(min(n/4, 40)), interval = c(9e-02,5e-01))
  fit2 <- fpcr(y, xfuncs = X0)

  mse1[f] <- mean( (alpha-fit1$bh/p)^2 )  
  mse2[f] <- mean( (alpha-fit2$fhat)^2 )
  
  plot(grid, alpha, type = "l", lwd = 3, xlab = "t", ylab = "")
  lines(grid, fit1$bh/p, lwd = 3, col = "red")
  lines(grid, fit2$fhat, col = "blue", lwd = 3)
  
  matr1[, f] <- fit1$bh/p
  matr2[, f] <- fit2$fhat
}
mean(mse1, na.rm = TRUE)*Nrep
mean(mse2, na.rm =TRUE)*Nrep

median(mse1, na.rm = TRUE)*Nrep
median(mse2, na.rm = TRUE)*Nrep

matplot(grid, matr1, lwd = 3, col = "gray", type = "l", cex.axis = 2, cex.lab = 2) ; lines(grid, alpha, lwd = 3, col = "black"); grid()
matplot(grid, matr2, lwd = 3, col = "gray", type = "l", cex.axis = 2, cex.lab = 2) ; lines(grid, alpha, lwd = 3, col = "black"); grid()


##################################################################################################################################################
# Fourth experiment
Nrep <- 1000
n <- 150
p <- 100
grid <- seq(0, 1, length = p)
alpha = -dnorm(grid, mean=.2, sd=.03) + 3*dnorm(grid, mean=.5, sd=.03) + dnorm(grid, mean=.75, sd=.04)

mse1 <- rep(NA, Nrep)
mse2 <- rep(NA, Nrep)

matr1 <- matrix(NA, nrow = p, ncol = Nrep)
matr2 <- matrix(NA, nrow = p, ncol = Nrep)

for(f in 1:Nrep){
  message('Iter = ', f, ' of ', Nrep)
  X0 <- matrix(rnorm(n*p), nrow = n, ncol = p)
  for(i in 1:n){
    for(j in 1:49){
      X0[i, ] <- X0[i, ] + j^{-1}*rnorm(1, 0, 1)*sqrt(2)*sapply(grid, FUN= function(x) cos((j-1)*pi*x))
      #X0[i, ] <- X0[i, ] +  1*j^{-1}*rt(1, df = 5)*sqrt(2)*sapply(grid, FUN= function(x) cos((j-1)*pi*x)) # For leverage contamination
    }
  }
  y0 = X0%*%alpha
  y <- y0 + rnorm(n)
  # y <- y0 + rt(n, df = 3)
  # y <- y0 + rnormMix(n, mean1 = 0, sd = 1, mean2 = 14, sd2 = 1, p.mix = 0.1)
  fit1 <- m.pen.sp(x = X0, y = y, nbasis = round(min(n/4, 40)), interval = c(3e-06, 1.5e-05))
  fit2 <- fpcr(y, xfuncs = X0)

  mse1[f] <- mean( (alpha-fit1$bh/p)^2 )  
  mse2[f] <- mean( (alpha-fit2$fhat)^2 )
  
  plot(grid, alpha, type = "l", lwd = 3, xlab = "t", ylab = "")
  lines(grid, fit1$bh/p, lwd = 3, col = "red")
  lines(grid, fit2$fhat, col = "blue", lwd = 3)
  
  matr1[, f] <- fit1$bh/p
  matr2[, f] <- fit2$fhat
}
mean(mse1, na.rm = TRUE)*Nrep
mean(mse2, na.rm =TRUE)*Nrep

median(mse1, na.rm = TRUE)*Nrep
median(mse2, na.rm = TRUE)*Nrep

matplot(grid, matr1, lwd = 3, col = "gray", type = "l", cex.axis = 2, cex.lab = 2) ; lines(grid, alpha, lwd = 3, col = "black"); grid()
matplot(grid, matr2, lwd = 3, col = "gray", type = "l", cex.axis = 2, cex.lab = 2) ; lines(grid, alpha, lwd = 3, col = "black"); grid()
